name: CI/CD

permissions:
  contents: write
  packages: write

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [main]
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build-test-sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Tidy and verify modules
        run: |
          go mod tidy
          go mod verify

      - name: Static analysis (fmt, vet)
        run: |
          go fmt ./...
          go vet ./...

      - name: Install gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run SAST scan (gosec)
        run: ~/go/bin/gosec ./...
        continue-on-error: true

      - name: Build
        run: go build ./...

      - name: Test
        run: go test -v ./...

  docker:
    needs: build-test-sast
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag name
        id: vars
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}:${{ env.TAG }}

  release:
    needs: build-test-sast
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build binaries
        run: |
          mkdir -p dist
          GOOS=linux   GOARCH=amd64 go build -o dist/kroki-mcp-linux-amd64   ./cmd/kroki-mcp
          GOOS=linux   GOARCH=arm64 go build -o dist/kroki-mcp-linux-arm64   ./cmd/kroki-mcp
          GOOS=darwin  GOARCH=amd64 go build -o dist/kroki-mcp-darwin-amd64  ./cmd/kroki-mcp
          GOOS=darwin  GOARCH=arm64 go build -o dist/kroki-mcp-darwin-arm64  ./cmd/kroki-mcp
          GOOS=windows GOARCH=amd64 go build -o dist/kroki-mcp-windows-amd64.exe ./cmd/kroki-mcp

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/kroki-mcp-linux-amd64
            dist/kroki-mcp-linux-arm64
            dist/kroki-mcp-darwin-amd64
            dist/kroki-mcp-darwin-arm64
            dist/kroki-mcp-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
